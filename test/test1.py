# auto-generated by nosebug (https://github.com/kmanley/nosebug.git)
import cgi
import StringIO
html_escape = cgi.escape
    
def get_ctx_value(stack, path):
    # current context is at stack[-1]
    parts = path.split("/")
    idx = -1
    curr = stack[idx]
    for part in parts:
        # Note: the parser ensures the path is well-formed
        if part == "..":
            idx -= 1
            curr = stack[idx]
        else:
            curr = curr.get(part)
    return curr

def start_section(stack, path):
    temp = get_ctx_value(stack, path) or []
    try:
        iter(temp)
    except TypeError:
        temp = [temp]
    return temp
 
def iter_test1(d):
    o = StringIO.StringIO()
    stack = [d]
    yield 'Hello '
    yield html_escape(unicode(get_ctx_value(stack, 'name')))
    yield '\nYou have just won $'
    yield html_escape(unicode(get_ctx_value(stack, 'value')))
    yield '!\n'
    for _ in start_section(stack, 'in_ca'):
        if type(_) == dict:
            stack.append(_)
        yield '\nWell, $'
        yield html_escape(unicode(get_ctx_value(stack, 'taxed_value')))
        yield ', after taxes.\n'
        stack.pop()
    yield '\n'
    yield '\n'
    
def test1(d): 
    o = StringIO.StringIO()
    for chunk in iter_test1(d):
        o.write(chunk)
    return o.getvalue()

