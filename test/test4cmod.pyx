# auto-generated by nosebug (https://github.com/kmanley/nosebug.git)
import cgi
html_escape = cgi.escape

#SEQUENCE_TYPES = set((list, tuple))
    
def get_ctx_value(stack, char* path):
    # current context is at stack[-1]
    #print "stack: %s" % repr(stack) # TODO:
    #print "path: %s" % repr(path) # TODO:
    cdef int idx
    #cdef char* part
    parts = path.split("/")
    idx = -1
    curr = stack[idx]
    for part in parts:
        # Note: the parser ensures the path is well-formed
        if part == "..":
            idx -= 1
            curr = stack[idx]
        else:
            curr = curr.get(part)
    return curr

def start_section(stack, char* path):
    temp = get_ctx_value(stack, path) or []
    if type(temp) not in (list, tuple):
        temp = [temp]
    return temp
 
def iter_test4(d):
    stack = [d]
    yield '<div class="comments">\n<h3>'
    yield html_escape(unicode(stack[-1]['header']))
    yield '</h3>\n<ul>\n'
    l1 = start_section(stack, 'comments')
    if type(l1) == dict:
        stack.append(l1)
    for ll1 in l1:
        if type(ll1) == dict:
            stack.append(ll1)
        yield '<li class="comment">\n<h5>'
        yield html_escape(unicode(stack[-1]['name']))
        yield '</h5><p>'
        yield html_escape(unicode(stack[-1]['body']))
        yield '</p>\n</li>'
        if type(ll1) == dict:
            stack.pop()
    if type(l1) == dict:
        stack.pop()
    yield '\n</ul>\n</div>'
    
def test4(d): 
    return "".join(iter_test4(d))

